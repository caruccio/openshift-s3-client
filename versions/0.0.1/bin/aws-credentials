#!/bin/bash

source $OPENSHIFT_CARTRIDGE_SDK_BASH

#TODO:
# - ask credential server for new credentials
# - register env vars with credentials
function create-s3-iam-user()
{
	# mocks
	AWS_S3_ACCESS_KEY_ID="key-id"
	AWS_S3_SECRET_ACCESS_KEY="access-key"
	AWS_S3_REGION="${1:-us-west-1}"
	AWS_S3_ENDPOINT="s3-${AWS_S3_REGION}.amazonaws.com"
	AWS_S3_BUCKET_NAME="$OPENSHIFT_APP_UUID"
	AWS_S3_URL="http://$AWS_S3_BUCKET_NAME.$AWS_S3_ENDPOINT"

	# don't strip leading TABs (man bash -> Here Documents)
	local -a MESSAGE_PREFIX=(
		aws_s3_region=$AWS_S3_REGION
		openshift_app_uuid=$OPENSHIFT_APP_UUID
		openshift_app_dns=$OPENSHIFT_APP_DNS
		openshift_aws_s3_client_dir=$OPENSHIFT_AWS_S3_CLIENT_DIR
	)
	local MESSAGE_STRING=$(IFS='&' && echo "$MESSAGE_PREFIX")
	local MESSAGE_SIGNATURE=$(echo "$MESSAGE_STRING&aws_s3_salt=$AWS_S3_SALT" | sha256sum | cut -f 1 -d " ")
	local MESSAGE="$MESSAGE_STRING&message_signature=$MESSAGE_SIGNATURE"

	if ! response=$(curl -k https://$OPENSHIFT_BROKER_HOST/getup/aws/s3/credentials/ -d "$MESSAGE"); then
		client_error "Something went wrong creating AWS S3 credentials:"
		client_error "$response"
#		return 1
	fi

	echo "$AWS_S3_ACCESS_KEY_ID" > env/OPENSHIFT_AWS_S3_ACCESS_KEY_ID
	echo "$AWS_S3_SECRET_ACCESS_KEY" > env/OPENSHIFT_AWS_S3_SECRET_ACCESS_KEY
	echo "$AWS_S3_REGION" > env/OPENSHIFT_AWS_S3_REGION
	echo "$AWS_S3_ENDPOINT" > env/OPENSHIFT_AWS_S3_ENDPOINT
	echo "$AWS_S3_BUCKET_NAME" > env/OPENSHIFT_AWS_S3_BUCKET_NAME
	echo "$AWS_S3_URL" > env/OPENSHIFT_AWS_S3_URL
	echo "$MESSAGE" > .message

	return 0
}
